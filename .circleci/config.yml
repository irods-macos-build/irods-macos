version: 2
jobs:
  build:
    macos:
      xcode: "10.1.0"
    shell: /bin/bash -e
    steps:
       - run:
           name: Install Homebrew
           command: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
       - run:
           name: Upgrade git to latest version, if needed.
           command: brew upgrade git || echo "Latest version of git has already been installed. Okay."
       - run: 
           name: Clone main iRODS repository
           command: git clone https://github.com/irods/irods.git
       - run:
           name: Clone iRODS dependencies repository
           command: git clone https://github.com/irods/externals.git
       - run: 
           name: Install prerequisites for dependencies
           working_directory: ~/project/externals
           command: ./install_prerequisites.py
       - run:
           name: Install autoconf
           command: brew install autoconf
       - run:
           name: Build avro
           working_directory: ~/project/externals
           command: ./build.py -v avro
       - run:
           name: Build aws-sdk-cpp
           working_directory: ~/project/externals
           command: ./build.py -v aws-sdk-cpp
       - run:
           name: Build boost
           working_directory: ~/project/externals
           command: ./build.py -v boost
       - run:
           name: Build catch2
           working_directory: ~/project/externals
           command: ./build.py -v catch2
       - run:
           name: Build clang
           working_directory: ~/project/externals
           command: ./build.py -v clang
       - run:
           name: Build clang-runtime
           working_directory: ~/project/externals
           command: ./build.py -v clang-runtime
       - run:
           name: Build cmake
           working_directory: ~/project/externals
           command: ./build.py -v cmake
       - run:
           name: Build cppzmq
           working_directory: ~/project/externals
           command: ./build.py -v cppzmq
       - run:
           name: Build cpython
           working_directory: ~/project/externals
           command: ./build.py -v cpython
       - run:
           name: Build imagemagick
           working_directory: ~/project/externals
           command: ./build.py -v imagemagick
       - run:
           name: Build jansson
           working_directory: ~/project/externals
           command: ./build.py -v jansson
       - run:
           name: Build json
           working_directory: ~/project/externals
           command: ./build.py -v json
       - run:
           name: Build libarchive
           working_directory: ~/project/externals
           command: ./build.py -v libarchive
       - run:
           name: Build libs3
           working_directory: ~/project/externals
           command: ./build.py -v libs3
       - run:
           name: Build qpid
           working_directory: ~/project/externals
           command: ./build.py -v qpid
       - run:
           name: Build qpid-proton
           working_directory: ~/project/externals
           command: ./build.py -v qpid-proton
       - run:
           name: Build qpid-with-proton
           working_directory: ~/project/externals
           command: ./build.py -v qpid-with-proton
       - run:
           name: Build redis
           working_directory: ~/project/externals
           command: ./build.py -v redis
       - run:
           name: Build spdlog
           working_directory: ~/project/externals
           command: ./build.py -v spdlog
       - run:
           name: Build zeromq4-1
           working_directory: ~/project/externals
           command: ./build.py -v zeromq4-1
